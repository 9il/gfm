MODULES =
    $(MODULE index, Index)
    $(MODULE gfm.core.queue, queue/fifo/stack/ring-buffer)
    $(MODULE gfm.core.memory, aligned malloc/free/realloc)

    $(MODULE gfm.math.vector, small vectors)
    $(MODULE gfm.math.matrix, small matrices)
    $(MODULE gfm.math.quaternion, quaternions)
    $(MODULE gfm.math.half, 16-bit floating point)
    $(MODULE gfm.math.wideint, fixed-width large integers)
    $(MODULE gfm.math.box, half-open intervals)
    $(MODULE gfm.math.fixedpoint, fixed-point numbers)
    $(MODULE gfm.math.rational, rational numbers)
    $(MODULE gfm.math.simplerng, random distributions)
    $(MODULE gfm.math.shapes, segment/triangla/sphere/ray)
    $(MODULE gfm.math.funcs, misc. real functions)

    $(MODULE gfm.net.uri, URI parsing)
    $(MODULE gfm.net.httpclient, very basic HTTP client)

    $(MODULE gfm.sdl2.sdl, SDL wrapper)
    $(MODULE gfm.sdl2.window, SDL_Window wrapper)
    $(MODULE gfm.sdl2.surface, SDL_Surface wrapper)
    $(MODULE gfm.sdl2.renderer, SDL_Renderer wrapper)
    $(MODULE gfm.sdl2.texture, SDL_Texture wrapper)
    $(MODULE gfm.sdl2.sdlimage, SDL_image wrapper)
    $(MODULE gfm.sdl2.sdlttf, SDL_ttf wrapper)
    $(MODULE gfm.sdl2.keyboard, keyboard state)
    $(MODULE gfm.sdl2.framecounter, framecounter)
    $(MODULE gfm.sdl2.mouse, mouse)
    $(MODULE gfm.sdl2.timer, timer)

    $(MODULE gfm.opengl.opengl, OpenGL context wrapper)
    $(MODULE gfm.opengl.matrixstack, stack of matrices)
    $(MODULE gfm.opengl.texture, OpenGL texture wrapper)
    $(MODULE gfm.opengl.renderbuffer, OpenGL renderbuffer wrapper)
    $(MODULE gfm.opengl.fbo, OpenGL FBO state)
    $(MODULE gfm.opengl.buffer, OpenGL buffer wrapper)
    $(MODULE gfm.opengl.program, OpenGL program wrapper)
    $(MODULE gfm.opengl.shader, OpenGL shader wrapper)
    $(MODULE gfm.opengl.vertex, OpenGL VBO wrapper)
    $(MODULE gfm.opengl.vao, OpenGL VAO wrapper)

    $(MODULE gfm.image.stb_image, stb_image port)

    $(MODULE gfm.freeimage.freeimage, FreeImage library wrapper)
    $(MODULE gfm.freeimage.fibitmap, FIBITMAP wrapper)

    $(MODULE gfm.assimp.assimp, ASSIMP library wrapper)
    $(MODULE gfm.assimp.scene, ASSIMP scene wrapper)

    $(MODULE gfm.logger.log, logging)

    $(MODULE gfm.enet.enet, ENet library wrapper)
    $(MODULE gfm.enet.host, ENet host wrapper)
    $(MODULE gfm.enet.peer, ENet peer wrapper)
    $(MODULE gfm.enet.packet, ENet packet wrapper)
    $(MODULE gfm.enet.address, ENet address wrapper)
    $(MODULE gfm.enet.event, ENet event wrapper)

